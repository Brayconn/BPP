//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BPP {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Dialog {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Dialog() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BPP.Dialog", typeof(Dialog).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All Files.
        /// </summary>
        internal static string AllFilesFilter {
            get {
                return ResourceManager.GetString("AllFilesFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hacks applied successfully!.
        /// </summary>
        internal static string ApplySuccess {
            get {
                return ResourceManager.GetString("ApplySuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changing this will reload all currently queued hacks. Are you sure you want to continue?.
        /// </summary>
        internal static string ChangeHackFolderConfirmation {
            get {
                return ResourceManager.GetString("ChangeHackFolderConfirmation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Would you like to create a patch history file?.
        /// </summary>
        internal static string CreateSaveOffer {
            get {
                return ResourceManager.GetString("CreateSaveOffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Any&gt;.
        /// </summary>
        internal static string DefaultEXEDisplayName {
            get {
                return ResourceManager.GetString("DefaultEXEDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        internal static string ErrorTitle {
            get {
                return ResourceManager.GetString("ErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EXE Files.
        /// </summary>
        internal static string EXEFilter {
            get {
                return ResourceManager.GetString("EXEFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patch {0}/{1}.
        /// </summary>
        internal static string FormDiffTitle {
            get {
                return ResourceManager.GetString("FormDiffTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patch History file created successfully!.
        /// </summary>
        internal static string GeneratePatchHistorySuccess {
            get {
                return ResourceManager.GetString("GeneratePatchHistorySuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pick the output patch history file....
        /// </summary>
        internal static string GeneratePatchHistoryTitle {
            get {
                return ResourceManager.GetString("GeneratePatchHistoryTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The patch history file generated by this option is only useful for undoing hacks.
        ///It will not let you detect/modify applied hacks, and could require manual editing to refine what you want changed.
        ///Are you sure you want to continue?.
        /// </summary>
        internal static string GeneratePatchHistoryWarning {
            get {
                return ResourceManager.GetString("GeneratePatchHistoryWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to apply these hacks?.
        /// </summary>
        internal static string GetApplyConfirmation {
            get {
                return ResourceManager.GetString("GetApplyConfirmation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The chosen base address ({0}) does not match the one found in this executable ({1})!
        ///Would you like to use the address found in the executable?.
        /// </summary>
        internal static string GetBaseAddressDecision {
            get {
                return ResourceManager.GetString("GetBaseAddressDecision", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error while creating the editor form:
        ///{0}.
        /// </summary>
        internal static string GetEditorError {
            get {
                return ResourceManager.GetString("GetEditorError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some of the selected hacks collide!.
        /// </summary>
        internal static string HackCollisionWarning {
            get {
                return ResourceManager.GetString("HackCollisionWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please pick an exe other than the one you&apos;ve already patched....
        /// </summary>
        internal static string InvalidOriginalEXE {
            get {
                return ResourceManager.GetString("InvalidOriginalEXE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose what patch history file you&apos;d like to open....
        /// </summary>
        internal static string OpenTitle {
            get {
                return ResourceManager.GetString("OpenTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patch History Files.
        /// </summary>
        internal static string PatchHistoryFilter {
            get {
                return ResourceManager.GetString("PatchHistoryFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Would you like to save a patch history file to {0}?.
        /// </summary>
        internal static string SaveOffer {
            get {
                return ResourceManager.GetString("SaveOffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose where to save this patch history file....
        /// </summary>
        internal static string SaveTitle {
            get {
                return ResourceManager.GetString("SaveTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the exe you want to patch....
        /// </summary>
        internal static string SelectEXETitle {
            get {
                return ResourceManager.GetString("SelectEXETitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose where your hacks are located....
        /// </summary>
        internal static string SelectHackFolderTitle {
            get {
                return ResourceManager.GetString("SelectHackFolderTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please pick the original file....
        /// </summary>
        internal static string SelectOriginalEXETitle {
            get {
                return ResourceManager.GetString("SelectOriginalEXETitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The hack couldn&apos;t be located!.
        /// </summary>
        internal static string UnableToLocateHack {
            get {
                return ResourceManager.GetString("UnableToLocateHack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning.
        /// </summary>
        internal static string WarningTitle {
            get {
                return ResourceManager.GetString("WarningTitle", resourceCulture);
            }
        }
    }
}
